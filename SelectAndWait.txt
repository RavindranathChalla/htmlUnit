For selecting drop down values by using below code.

Select oSelect = new Select(driver.findElement(By.id("yy_date_8"))); 
oSelect.selectByVisibleText("2010");

oSelect.selectByIndex(4);

oSelect.selectByValue("2014");


	Select oSelect = new Select(driver.findElement(By.id("yy_date_8")));
	List <WebElement> elementCount = oSelect.getOptions();
	int iSize = elementCount.size();

	for(int i =0; i<iSize ; i++){
		String sValue = elementCount.get(i).getText();
		System.out.println(sValue);
		}

Multi Select Methods:

 Select oSelect = new Select(driver.findElement(By.id(Element_ID)));
 oSelect.selectByIndex(index)
 oSelect.selectByIndex(index) 
 // Or can be used as 
 oSelect.selectByVisibleText(text)
 oSelect.selectByVisibleText(text)
 
 // Or can be used as 
 oSelect.selectByValue(value)
 oSelect.selectByValue(value)
 
Wait methods in Selenium:

ImplicitlyWait Command:

 WebDriver driver => new FirefoxDriver(); 
 driver.manage().timeouts().implicitlyWait(100, TimeUnit.SECONDS); 
 driver.get("http://url_that_delays_loading"); 
 WebElement myDynamicElement = driver.findElement(By.id("myDynamicElement"));
 
 
FluentWait Command:
 
 // Waiting 30 seconds for an element to be present on the page, checking 
  // for its presence once every 5 seconds.
 
  Wait wait = new FluentWait(driver).withTimeout(30, SECONDS).pollingEvery(5, SECONDS).ignoring(NoSuchElementException.class); 
  WebElement foo = wait.until(new Function() { 
    public WebElement apply(WebDriver driver) { 
    return driver.findElement(By.id("foo")); 
    } 
   });
   
ExpectedConditions Command:
    WebDriverWait wait = new WebDriverWait(driver, 100);
    WebElement element = wait.until(ExpectedConditions.elementToBeClickable(By.id(>someid>)));
	
PageLoadTimeout Command:
	 driver.manage().timeouts().pageLoadTimeout(100, SECONDS);
	 
SetScriptTimeout Command:
	  driver.manage().timeouts().setScriptTimeout(100,SECONDS);